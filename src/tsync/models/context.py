"""
Этот модуль содержит модель Context, которая используется для передачи
всей необходимой информации в стратегии синхронизации.
"""
from pathlib import Path
from typing import Any, Dict
from pydantic import BaseModel

from .provider import File

class Context(BaseModel):
    """
    Контекст выполнения для одной операции синхронизации файла.

    Содержит всю необходимую информацию для того, чтобы стратегия
    могла принять решение и выполнить свою работу.
    """
    source_path: Path
    """
    Что делает: Полный путь к исходному файлу в локальном кэше toolkit-а.
    Форма: Объект `pathlib.Path`.
    """
    destination_path: Path
    """
    Что делает: Полный путь к целевому файлу в проекте consumer-а.
    Форма: Объект `pathlib.Path`.
    """
    file_config: File
    """
    Что делает: Объект `File` из манифеста provider-а, содержащий все
    метаданные о файле (политику, теги, переменные по умолчанию).
    Форма: Объект `tsync.models.provider.File`.
    """
    variables: Dict[str, Any]
    """
    Что делает: Финальный, объединенный словарь переменных со всех уровней
    (глобальные, компонент, файл), готовый для использования в шаблонах.
    Форма: Словарь (ключ-значение).
    """
    destination_exists: bool
    """
    Что делает: Флаг, указывающий, существует ли уже файл в проекте consumer-а.
    Позволяет стратегиям (например, 'init') избежать лишних дисковых операций.
    Форма: `true` или `false`.
    """